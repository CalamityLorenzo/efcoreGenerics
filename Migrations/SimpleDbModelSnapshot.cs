// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyDbApp;

namespace efcoreGenerics.Migrations
{
    [DbContext(typeof(SimpleDb))]
    partial class SimpleDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyDbApp.HOOneSubTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAOkay")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreOneS2");
                });

            modelBuilder.Entity("MyDbApp.HOneCore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreOne");
                });

            modelBuilder.Entity("MyDbApp.HOneSubOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<int>("Numbers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreOneS1");
                });

            modelBuilder.Entity("MyDbApp.HTwoCore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreTwo");
                });

            modelBuilder.Entity("MyDbApp.HTwoSubOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HostId")
                        .HasColumnType("int");

                    b.Property<int>("Numbers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreTwoS1");
                });

            modelBuilder.Entity("MyDbApp.HTwoSubTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HostId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAOkay")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("CoreTwoS2");
                });

            modelBuilder.Entity("MyDbApp.HostOne", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NoTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SameSame")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Selfish")
                        .HasColumnType("datetime2");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HostOnes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoTime = new DateTime(2020, 9, 2, 10, 43, 15, 326, DateTimeKind.Local).AddTicks(6152),
                            SameSame = "Not the usual",
                            Selfish = new DateTime(2020, 9, 5, 10, 43, 15, 321, DateTimeKind.Local).AddTicks(913),
                            Year = 1923
                        });
                });

            modelBuilder.Entity("MyDbApp.HostTwo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("NoTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PuffDaddy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SameSame")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HostTwos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NoTime = new DateTime(2020, 9, 2, 10, 43, 15, 329, DateTimeKind.Local).AddTicks(4928),
                            PuffDaddy = "Is a parappa",
                            SameSame = "Another version"
                        });
                });

            modelBuilder.Entity("MyDbApp.HOOneSubTwo", b =>
                {
                    b.HasOne("MyDbApp.HOneCore", "Host")
                        .WithMany("SubsTwo")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MyDbApp.HOneCore", b =>
                {
                    b.HasOne("MyDbApp.HostOne", "Host")
                        .WithMany("CoreCollection")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyDbApp.HOneSubOne", b =>
                {
                    b.HasOne("MyDbApp.HOneCore", "Host")
                        .WithMany("SubsONe")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyDbApp.HTwoCore", b =>
                {
                    b.HasOne("MyDbApp.HostTwo", "Host")
                        .WithMany("CoreCollection")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyDbApp.HTwoSubOne", b =>
                {
                    b.HasOne("MyDbApp.HTwoCore", "Host")
                        .WithMany("SubsONe")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyDbApp.HTwoSubTwo", b =>
                {
                    b.HasOne("MyDbApp.HTwoCore", "Host")
                        .WithMany("SubsTwo")
                        .HasForeignKey("HostId");
                });
#pragma warning restore 612, 618
        }
    }
}
